{"ast":null,"code":"var _jsxFileName = \"D:\\\\attendance-marker\\\\frontend\\\\src\\\\pages\\\\AttendanceRecordPage.js\",\n  _s = $RefreshSig$();\n// AttendanceRecordsPage.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from '../component/Header';\nimport \"./record.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AttendanceRecordsPage() {\n  _s();\n  const [records, setRecords] = useState([]);\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n  const fetchAttendanceRecords = async () => {\n    // Retrieve authentication token from local storage\n    const token = localStorage.getItem('token');\n\n    // Check if token is available\n    if (!token) {\n      console.error('No authentication token found');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:5000/api/attendance', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Include the authentication token in the headers\n        }\n      });\n      console.log(response);\n      setRecords(response.data);\n    } catch (error) {\n      console.error('Error fetching attendance records:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAttendanceRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-records-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Attendance Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"attendance-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: records.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.userId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(record.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(AttendanceRecordsPage, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = AttendanceRecordsPage;\nexport default AttendanceRecordsPage;\nvar _c;\n$RefreshReg$(_c, \"AttendanceRecordsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","AttendanceRecordsPage","_s","records","setRecords","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","fetchAttendanceRecords","token","localStorage","getItem","console","error","response","get","headers","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","record","userId","status","_id","_c","$RefreshReg$"],"sources":["D:/attendance-marker/frontend/src/pages/AttendanceRecordPage.js"],"sourcesContent":["// AttendanceRecordsPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../component/Header';\r\nimport \"./record.css\"\r\n\r\nfunction AttendanceRecordsPage() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  const fetchAttendanceRecords = async () => {\r\n     // Retrieve authentication token from local storage\r\n     const token = localStorage.getItem('token');\r\n    \r\n     // Check if token is available\r\n     if (!token) {\r\n       console.error('No authentication token found');\r\n       return;\r\n     }\r\n \r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/attendance', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}` // Include the authentication token in the headers\r\n        }\r\n      });\r\n      console.log(response);\r\n      \r\n      setRecords(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching attendance records:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchAttendanceRecords();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n       <Header />\r\n  \r\n    <div className=\"attendance-records-container\">\r\n   \r\n      <div className=\"table-container\">\r\n        <h2>Attendance Records</h2>\r\n        <table className=\"attendance-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>User ID</th>\r\n              <th>Date</th>\r\n              <th>Status</th>\r\n              {/* Add more table headers as needed */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map(record => (\r\n              <tr key={record._id}>\r\n                <td>{record.userId}</td>\r\n                <td>{formatDate(record.date)}</td>\r\n                <td>{record.status}</td>\r\n                {/* Add more table cells for other record fields */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AttendanceRecordsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}